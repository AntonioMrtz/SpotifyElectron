{
  "openapi": "3.1.0",
  "info": {
    "title": "Spotify Electron Backend API",
    "description": "API created with Python FastAPI to serve          as backend for Spotify Electron music streaming Desktop App",
    "contact": {
      "name": "Antonio Mart\u00ednez Fern\u00e1ndez",
      "url": "https://github.com/AntonioMrtz",
      "email": "antoniomartinezfernandez17@gmail.com"
    },
    "license": {
      "name": "Attribution-NonCommercial-ShareAlike 4.0 International",
      "url": "https://creativecommons.org/licenses/by-nc-sa/4.0/deed.es"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000"
    }
  ],
  "paths": {
    "/playlists/{name}": {
      "get": {
        "tags": [
          "Playlists"
        ],
        "summary": "Get Playlist",
        "description": "Get playlist\n\nArgs:\n    name (str): playlist name",
        "operationId": "get_playlist_playlists__name__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Playlists"
        ],
        "summary": "Update Playlist",
        "description": "Update playlist\n\nArgs:\n    photo (str): playlist new photo\n    description (str): playlist new description\n    song_names (list[str], optional): playlist new song names. Defaults to Body(...).\n    new_name (str | None, optional): playlist new name. Defaults to None.",
        "operationId": "update_playlist_playlists__name__put",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "photo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Photo"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Description"
            }
          },
          {
            "name": "new_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "New Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Song Names"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Playlists"
        ],
        "summary": "Delete Playlist",
        "description": "Delete playlsit\n\nArgs:\n    name (str): playlist name",
        "operationId": "delete_playlist_playlists__name__delete",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/playlists/": {
      "post": {
        "tags": [
          "Playlists"
        ],
        "summary": "Create Playlist",
        "description": "Create playlist\n\nArgs:\n    name (str): playlist name\n    photo (str): playlist photo\n    description (str): playlist description\n    song_names (list[str]): list of song names included in playlist.",
        "operationId": "create_playlist_playlists__post",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "photo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Photo"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Description"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Song Names"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Playlists"
        ],
        "summary": "Get Playlists",
        "description": "Get all playlists",
        "operationId": "get_playlists_playlists__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/playlists/selected/{names}": {
      "get": {
        "tags": [
          "Playlists"
        ],
        "summary": "Get Selected Playlists",
        "description": "Get selected playlists\n\nArgs:\n    names (str): playlist names",
        "operationId": "get_selected_playlists_playlists_selected__names__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "names",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Names"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/songs/{name}": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get Song",
        "description": "Get song\n\nArgs:\n    name (str): song name",
        "operationId": "get_song_songs__name__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Songs"
        ],
        "summary": "Delete Song",
        "description": "Delete song\n\nArgs:\n    name (str): song name",
        "operationId": "delete_song_songs__name__delete",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/songs/": {
      "post": {
        "tags": [
          "Songs"
        ],
        "summary": "Create Song",
        "description": "Create song\n\nArgs:\n    name (str): song name\n    genre (Genre): genre\n    photo (str): photo\n    file (UploadFile): song file",
        "operationId": "create_song_songs__post",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "genre",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Genre"
            }
          },
          {
            "name": "photo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Photo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_song_songs__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/songs/metadata/{name}": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get Song Metadata",
        "description": "Get song metadata\n\nArgs:\n    name (str): the song name",
        "operationId": "get_song_metadata_songs_metadata__name__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/songs/{name}/streams": {
      "patch": {
        "tags": [
          "Songs"
        ],
        "summary": "Increase Song Streams",
        "description": "Increase total streams of a song\n\nArgs:\n    name (str): song name",
        "operationId": "increase_song_streams_songs__name__streams_patch",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/songs/genres/{genre}": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get Songs By Genre",
        "description": "Get songs by genre\n\nArgs:\n    genre (Genre): the genre to match",
        "operationId": "get_songs_by_genre_songs_genres__genre__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "genre",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Genre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/genres/": {
      "get": {
        "tags": [
          "Genres"
        ],
        "summary": "Get Genres",
        "description": "Get all genres and their string representation",
        "operationId": "get_genres_genres__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/users/whoami": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Who Am I",
        "description": "Returns token info from JWT\n\nArgs:\n    token (TokenData): the jwt token. Defaults to None.",
        "operationId": "get_who_am_i_users_whoami_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/users/{name}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "Get user by name\n\nArgs:\n    name (str): user name",
        "operationId": "get_user_users__name__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "description": "Delete user\n\nArgs:\n    name (str): user name",
        "operationId": "delete_user_users__name__delete",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "description": "Create user\n\nArgs:\n    name (str): user name\n    photo (str): user photo\n    password (str): user password",
        "operationId": "create_user_users__post",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "photo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Photo"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{name}/playback_history": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Patch Playback History",
        "description": "Add song to playback history\n\nArgs:\n    name (str): user name\n    song_name (str): song name",
        "operationId": "patch_playback_history_users__name__playback_history_patch",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "song_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Song Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{name}/saved_playlists": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Patch Saved Playlists",
        "description": "Add playlist to saved list\n\nArgs:\n    name (str): user name\n    playlist_name (str): saved playlist",
        "operationId": "patch_saved_playlists_users__name__saved_playlists_patch",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "playlist_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Playlist Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete Saved Playlists",
        "description": "Delete playlist from saved list of user\n\nArgs:\n    name (str): user name\n    playlist_name (str): playlist name",
        "operationId": "delete_saved_playlists_users__name__saved_playlists_delete",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "playlist_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Playlist Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{name}/relevant_playlists": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Relevant Playlists",
        "description": "Get relevant playlists for user\n\nArgs:\n    name (str): user name",
        "operationId": "get_user_relevant_playlists_users__name__relevant_playlists_get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{name}/playlist_names": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Playlists Names",
        "description": "Get playlist names created by user\n\nArgs:\n    name (str): user name",
        "operationId": "get_user_playlists_names_users__name__playlist_names_get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artists/{name}": {
      "get": {
        "tags": [
          "Artists"
        ],
        "summary": "Get Artist",
        "description": "Get artist by name\n\nArgs:\n    name (str): artist name",
        "operationId": "get_artist_artists__name__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artists/": {
      "post": {
        "tags": [
          "Artists"
        ],
        "summary": "Create Artist",
        "description": "Create artist\n\nArgs:\n    name (str): artist name\n    photo (str): artist photo\n    password (str): artist password",
        "operationId": "create_artist_artists__post",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "photo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Photo"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Artists"
        ],
        "summary": "Get Artists",
        "description": "Get all artists",
        "operationId": "get_artists_artists__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/artists/{name}/streams": {
      "get": {
        "tags": [
          "Artists"
        ],
        "summary": "Get Artist Streams",
        "description": "Get artist total streams of his songs",
        "operationId": "get_artist_streams_artists__name__streams_get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/login/": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Login Usuario",
        "description": "Login user\n\nArgs:\n----\n    form_data (Annotated[OAuth2PasswordRequestForm, Depends): user and password",
        "operationId": "login_usuario_login__post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_usuario_login__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/search/": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get Search Name",
        "description": "Search for items that partially match name\n\nArgs:\n----\n    name (str): name to match",
        "operationId": "get_search_name_search__get",
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health/": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Check Endpoint",
        "description": "Validates if the app has launched correctly\n\nReturns\n-------\n    Response 200 OK",
        "operationId": "get_health_health__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_create_song_songs__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_create_song_songs__post"
      },
      "Body_login_usuario_login__post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_usuario_login__post"
      },
      "Genre": {
        "type": "string",
        "enum": [
          "Pop",
          "Rock",
          "Hip-hop",
          "R&B (Ritmo y Blues)",
          "Jazz",
          "Blues",
          "Reggae",
          "Country",
          "Folk",
          "Cl\u00e1sica",
          "Electr\u00f3nica",
          "Dance",
          "Metal",
          "Punk",
          "Funk",
          "Soul",
          "Gospel",
          "Latina",
          "M\u00fasica del mundo",
          "Experimental",
          "Ambiental",
          "Fusi\u00f3n",
          "Instrumental",
          "Alternativa",
          "Indie",
          "Rap",
          "Ska",
          "Grunge",
          "Trap",
          "Reggaeton"
        ],
        "title": "Genre",
        "description": "Song genres"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "JWTBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
